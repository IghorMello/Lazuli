{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,kCAAoC;AAwBpC,mBAAwB,EAAoC;IAC1D,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;QAAU,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAClD,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QAErB,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;aACjB,IAAI,CACH,UAAC,MAAS,IAAK,OAAA,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,EAAhB,CAAgB,EAC/B,UAAC,KAAY,IAAK,OAAA,EAAE,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,yCAAyC,CAAC,CAAC,EAArE,CAAqE,CACxF,CAAA;IACL,CAAC,CAAC,CAAA;AACJ,CAAC;AAMD,iBAAS,SAAS,CAAA","sourcesContent":["import arity = require('util-arity')\nimport Promise = require('any-promise')\n\nfunction unthenify <U> (\n  fn: () => Promise<U>\n): (cb: unthenify.Callback<U>) => any\nfunction unthenify <T1, U> (fn:\n  (a: T1) => Promise<U>\n): (a: T1, cb: unthenify.Callback<U>) => any\nfunction unthenify <T1, T2, U> (\n  fn: (a: T1, b: T2) => Promise<U>\n): (a: T1, b: T2, cb: unthenify.Callback<U>) => any\nfunction unthenify <T1, T2, T3, U> (\n  fn: (a: T1, b: T2, c: T3) => Promise<U>\n): (a: T1, b: T2, c: T3, cb: unthenify.Callback<U>) => any\nfunction unthenify <T1, T2, T3, T4, U> (fn:\n  (a: T1, b: T2, c: T3, d: T4) => Promise<U>\n): (a: T1, b: T2, c: T3, d: T4, cb: unthenify.Callback<U>) => any\nfunction unthenify <T1, T2, T3, T4, T5, U> (\n  fn: (a: T1, b: T2, c: T3, d: T4, e: T5) => Promise<U>\n): (a: T1, b: T2, c: T3, d: T4, e: T5, cb: unthenify.Callback<U>) => any\nfunction unthenify <T1, T2, T3, T4, T5, T6, U> (\n  fn: (a: T1, b: T2, c: T3, d: T4, e: T5, f: T6) => Promise<U>\n): (a: T1, b: T2, c: T3, d: T4, e: T5, f: T6, cb: unthenify.Callback<U>) => any\nfunction unthenify <U> (fn: (...args: any[]) => Promise<any>): (...args: any[]) => any {\n  return arity(fn.length + 1, function (...args: any[]) {\n    const cb = args.pop()\n\n    fn.apply(this, args)\n      .then(\n        (result: U) => cb(null, result),\n        (error: Error) => cb(error || new TypeError('Promise was rejected with a falsy value'))\n      )\n  })\n}\n\nnamespace unthenify {\n  export type Callback <T> = (error: Error, result: T) => any\n}\n\nexport = unthenify\n"]}