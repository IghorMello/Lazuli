var assert=require("assert"),types=require("ast-types"),util=require("./util"),n=types.namedTypes,Node=n.Node,isArray=types.builtInTypes.array,isNumber=types.builtInTypes.number;function FastPath(a){assert.ok(this instanceof FastPath),this.stack=[a]}var FPp=FastPath.prototype;FastPath.from=function(a){if(a instanceof FastPath)return a.copy();if(a instanceof types.NodePath){for(var d,b=Object.create(FastPath.prototype),c=[a.value];d=a.parentPath;a=d)c.push(a.name,d.value);return b.stack=c.reverse(),b}return new FastPath(a)},FPp.copy=function(){var a=Object.create(FastPath.prototype);return a.stack=this.stack.slice(0),a},FPp.getName=function(){var b=this.stack,c=b.length;return 1<c?b[c-2]:null},FPp.getValue=function(){var b=this.stack;return b[b.length-1]};function getNodeHelper(a,b){for(var e,c=a.stack,d=c.length-1;0<=d;d-=2)if(e=c[d],n.Node.check(e)&&0>--b)return e;return null}FPp.getNode=function(b){return getNodeHelper(this,~~b)},FPp.getParentNode=function(b){return getNodeHelper(this,~~b+1)},FPp.isLast=function(){var b=this.stack;if(this.getParentNode()){var c=b[b.length-2];assert.ok("number"==typeof c);const d=b[b.length-3];return assert.ok(Array.isArray(d)),c===d.length-1}return!1},FPp.call=function(b){for(var h,c=this.stack,d=c.length,e=c[d-1],f=arguments.length,g=1;g<f;++g)h=arguments[g],e=e[h],c.push(h,e);var j=b(this);return c.length=d,j},FPp.each=function(b){for(var h,c=this.stack,d=c.length,e=c[d-1],f=arguments.length,g=1;g<f;++g)h=arguments[g],e=e[h],c.push(h,e);for(var g=0;g<e.length;++g)g in e&&(c.push(g,e[g]),b(this),c.length-=2);c.length=d},FPp.map=function(b){for(var h,c=this.stack,d=c.length,e=c[d-1],f=arguments.length,g=1;g<f;++g)h=arguments[g],e=e[h],c.push(h,e);for(var j=Array(e.length),g=0;g<e.length;++g)g in e&&(c.push(g,e[g]),j[g]=b(this,g),c.length-=2);return c.length=d,j},FPp.needsParens=function(a){var b=this.getParentNode();if(!b)return!1;var c=this.getName(),d=this.getNode();if(this.getValue()!==d)return!1;if(n.Statement.check(d))return!1;if("Identifier"===d.type)return!1;if("ParenthesizedExpression"===b.type)return!1;if(("ClassDeclaration"===b.type||"ClassExpression"===b.type)&&b.superClass===d&&("ArrowFunctionExpression"===d.type||"AssignmentExpression"===d.type||"AwaitExpression"===d.type||"BinaryExpression"===d.type||"ConditionalExpression"===d.type||"LogicalExpression"===d.type||"NewExpression"===d.type||"ObjectExpression"===d.type||"ParenthesizedExpression"===d.type||"SequenceExpression"===d.type||"TaggedTemplateExpression"===d.type||"UnaryExpression"===d.type||"UpdateExpression"===d.type||"YieldExpression"===d.type))return!0;if("BinaryExpression"===b.type&&"**"===b.operator&&b.left===d&&"Identifier"!==d.type&&"Literal"!==d.type&&"NumericLiteral"!==d.type)return!0;switch(d.type){case"SpreadElement":case"SpreadProperty":return"MemberExpression"===b.type&&"object"===c&&b.object===d;case"UpdateExpression":switch(b.type){case"MemberExpression":return"object"===c&&b.object===d;case"TaggedTemplateExpression":case"CallExpression":case"NewExpression":return!0;case"UnaryExpression":return d.prefix&&("++"===d.operator&&"+"===b.operator||"--"===d.operator&&"-"===b.operator);}case"UnaryExpression":switch(b.type){case"UnaryExpression":return d.operator===b.operator&&("+"===d.operator||"-"===d.operator);case"MemberExpression":return"object"===c&&b.object===d;}case"BinaryExpression":if("in"===d.operator&&"ForStatement"===b.type&&b.init===d)return!0;if("in"===d.operator&&"AssignmentExpression"===b.type)return!0;case"LogicalExpression":switch(b.type){case"CallExpression":case"NewExpression":return"callee"===c&&b.callee===d;case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return!0;case"MemberExpression":return"object"===c&&b.object===d;case"BinaryExpression":case"LogicalExpression":var e=b.operator,f=util.getPrecedence(e),g=d.operator,h=util.getPrecedence(g);if(f>h)return!0;if(f===h&&"right"===c)return assert.strictEqual(b.right,d),!0;default:return!1;}case"SequenceExpression":switch(b.type){case"ReturnStatement":return!1;case"ForStatement":return!1;case"ExpressionStatement":return"expression"!==c;default:return!0;}case"YieldExpression":case"AwaitExpression":switch(b.type){case"TaggedTemplateExpression":case"BinaryExpression":case"LogicalExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"NewExpression":case"MemberExpression":return!0;case"CallExpression":return b.callee===d;case"ConditionalExpression":return b.test===d;default:return!1;}case"ArrayTypeAnnotation":return"NullableTypeAnnotation"===b.type;case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return"NullableTypeAnnotation"===b.type||"IntersectionTypeAnnotation"===b.type||"UnionTypeAnnotation"===b.type;case"NullableTypeAnnotation":return"ArrayTypeAnnotation"===b.type;case"FunctionTypeAnnotation":return"UnionTypeAnnotation"===b.type||"IntersectionTypeAnnotation"===b.type;case"NumericLiteral":case"Literal":return"MemberExpression"===b.type&&isNumber.check(d.value)&&"object"===c&&b.object===d;case"AssignmentExpression":if("ArrowFunctionExpression"===b.type&&b.body===d&&"ObjectPattern"===d.left.type)return!0;case"ConditionalExpression":switch(b.type){case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":case"LogicalExpression":case"NewExpression":case"ExportDefaultDeclaration":return!0;case"CallExpression":return"callee"===c&&b.callee===d;case"ConditionalExpression":return"test"===c&&b.test===d;case"MemberExpression":return"object"===c&&b.object===d;default:return n.ObjectPattern.check(d.left)&&this.firstInStatement();}case"FunctionExpression":case"ArrowFunctionExpression":if("CallExpression"===b.type&&"callee"===c)return!0;switch(b.type){case"ConditionalExpression":if(b.test===d)return!0;case"ExportDefaultDeclaration":return"ArrowFunctionExpression"!==d.type;case"ExpressionStatement":case"MemberExpression":case"TaggedTemplateExpression":case"UnaryExpression":return!0;case"NewExpression":return"callee"===c;case"LogicalExpression":return"ArrowFunctionExpression"===d.type;default:return isBinary(b);}case"ClassExpression":switch(b.type){case"TaggedTemplateExpression":case"BinaryExpression":case"ExportDefaultDeclaration":case"ExpressionStatement":return!0;case"CallExpression":if(b.callee===d)return!0;case"MemberExpression":return"object"===c&&b.object===d;case"ConditionalExpression":if(b.test===d)return!0;}return!1;case"ObjectExpression":if("ArrowFunctionExpression"===b.type&&"body"===c)return!0;if("TaggedTemplateExpression"===b.type)return!0;if("MemberExpression"===b.type)return"object"===c&&b.object===d;case"StringLiteral":if("ExpressionStatement"===b.type)return!0;default:if("NewExpression"===b.type&&"callee"===c&&b.callee===d)return containsCallExpression(d);}return!0!==a&&!this.canBeFirstInStatement()&&this.firstInStatement()};function isBinary(a){return n.BinaryExpression.check(a)||n.LogicalExpression.check(a)}function containsCallExpression(a){return!!n.CallExpression.check(a)||(isArray.check(a)?a.some(containsCallExpression):!!n.Node.check(a)&&types.someField(a,function(b,c){return containsCallExpression(c)}))}FPp.canBeFirstInStatement=function(){var a=this.getNode();return!n.FunctionExpression.check(a)&&!n.ObjectExpression.check(a)&&!n.ClassExpression.check(a)&&!(n.AssignmentExpression.check(a)&&n.ObjectPattern.check(a.left))},FPp.firstInStatement=function(){for(var b,c,d,e,a=this.stack,f=a.length-1;0<=f;f-=2)if(n.Node.check(a[f])&&(d=b,e=c,b=a[f-1],c=a[f]),c&&e){if(n.BlockStatement.check(c)&&"body"===b&&0===d)return assert.strictEqual(c.body[0],e),!0;if(n.ExpressionStatement.check(c)&&"expression"===d)return assert.strictEqual(c.expression,e),!0;if(n.SequenceExpression.check(c)&&"expressions"===b&&0===d){assert.strictEqual(c.expressions[0],e);continue}if(n.CallExpression.check(c)&&"callee"===d){assert.strictEqual(c.callee,e);continue}if(n.MemberExpression.check(c)&&"object"===d){assert.strictEqual(c.object,e);continue}if(n.ConditionalExpression.check(c)&&"test"===d){assert.strictEqual(c.test,e);continue}if(isBinary(c)&&"left"===d){assert.strictEqual(c.left,e);continue}if(n.UnaryExpression.check(c)&&!c.prefix&&"argument"===d){assert.strictEqual(c.argument,e);continue}return!1}return!0},module.exports=FastPath;

